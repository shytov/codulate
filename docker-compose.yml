version: "2.1"

services:
  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    networks: [backing-services]
    ports:
      - "15432:5432"
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: admindb

  activemq:
    image: webcenter/activemq:5.14.3
    ports:
      # mqtt
      - "1883:1883"
      # amqp
      - "5672:5672"
      # ui
      - "8161:8161"
      # stomp
      - "61613:61613"
      # ws
      - "61614:61614"
      # jms
      - "61616:61616"
    networks: [backing-services]
    volumes: ["activemq-data:/opt/activemq/conf", "activemq-data:/data/activemq", "activemq-data:/var/log/activemq"]
    environment:
      ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT: "true"
      ACTIVEMQ_ADMIN_LOGIN: admin
      ACTIVEMQ_ADMIN_PASSWORD: password
      ACTIVEMQ_WRITE_LOGIN: write
      ACTIVEMQ_WRITE_PASSWORD: password
      ACTIVEMQ_READ_LOGIN: read
      ACTIVEMQ_READ_PASSWORD: password
      ACTIVEMQ_JMX_LOGIN: jmx
      ACTIVEMQ_JMX_PASSWORD: password
      ACTIVEMQ_STATIC_TOPICS: coordinates-topic,violations-topic
      ACTIVEMQ_STATIC_QUEUES: coordinates-queue
      ACTIVEMQ_ENABLED_SCHEDULER: "true"
      ACTIVEMQ_MIN_MEMORY: 256
      ACTIVEMQ_MAX_MEMORY: 512

  map-api:
    container_name: map-api
    build:
      context: docker-map-api
      dockerfile: Dockerfile-Admin
    image: map-api:latest
    ports:
      - 28080:8080
    networks:
      - backing-services
    restart: on-failure

  admin-service:
    container_name: admin-service
    build:
      context: docker-admin-service
      dockerfile: Dockerfile-Admin
    image: admin-service:latest
    ports:
      - 18080:8080
    networks:
      - backing-services
    depends_on:
      - "activemq"
      - "db"
    restart: on-failure

volumes:
  activemq-data: {}

networks:
  backing-services:
    driver: bridge